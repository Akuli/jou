# A call to the _jou_windows_startup() function is inserted to the
# start of every Jou program when compiling for Windows.

# On Windows, the C "global variables" stdin, stdout and stderr are
# actually macros:
#
#    $ printf "#include <stdio.h>\nstdin\nstdout\nstderr\n" | x86_64-w64-mingw32-cpp | tail -3
#    (__acrt_iob_func(0))
#    (__acrt_iob_func(1))
#    (__acrt_iob_func(2))
#
# For simplicity, Jou redefines them as variables with the same
# names and assigns the correct values to them.
#
# We can't import FILE from io.jou here, because then we would be
# trying to define a variable that already exists.
global stdin: void*
global stdout: void*
global stderr: void*

declare __acrt_iob_func(index: int) -> void*

def _jou_windows_startup() -> None:
    stdin = __acrt_iob_func(0)
    stdout = __acrt_iob_func(1)
    stderr = __acrt_iob_func(2)

# On linux, C's errno is a macro that expands to (*__errno_location()).
# On Windows it expands to (*_errno()) instead. Let's make it consistent.
declare _errno() -> int*
def __errno_location() -> int*:
    return _errno()
