SRC := $(wildcard src/*.c)

LLVM_CONFIG ?= $(shell which llvm-config-13 || which llvm-config-11)
CFLAGS += $(shell $(LLVM_CONFIG) --cflags)
LDFLAGS ?= $(shell $(LLVM_CONFIG) --ldflags --libs)

ifeq ($(CC),cc)
	# default c compiler --> use clang
	CC := $(shell $(LLVM_CONFIG) --bindir)/clang
endif

all: jou compile_flags.txt

# point clangd to the right include folder so i don't get red squiggles in my editor
compile_flags.txt:
	echo "-I$(shell $(LLVM_CONFIG) --includedir)"  > compile_flags.txt

config.h:
	echo "// auto-generated by Makefile" > config.h
	echo "#define JOU_CLANG_PATH \"$(shell $(LLVM_CONFIG) --bindir)/clang\"" >> config.h

obj/%.o: src/%.c $(wildcard src/*.h) config.h
	mkdir -vp obj && $(CC) -c $(CFLAGS) $< -o $@

jou: $(SRC:src/%.c=obj/%.o)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)

.PHONY: clean
clean:
	rm -rvf obj jou jou.exe tmp config.h compile_flags.txt
	find -name jou_compiled -print -exec rm -rf '{}' +
