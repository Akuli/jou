# assume llvm_headers.zip has been extracted
CFLAGS += -I.

# .a files generated in windows-setup.sh
LDFLAGS += $(wildcard libs/lib*.a)

ifeq ($(CC),cc)
	# default c compiler --> use clang
	CC := mingw64/bin/clang.exe
endif

# clang version in mingw doesn't seem as mature as what I have on linux...
# it shows a lot of unnecssary/dumb warnings by default
CFLAGS += -Wno-return-type -Wno-uninitialized -Wno-implicit-fallthrough

all: jou.exe compile_flags.txt

# point clangd to the right include folder so i don't get red squiggles in my editor
compile_flags.txt:
	echo -I$(CURDIR) > compile_flags.txt

obj/%.o: src/%.c $(wildcard src/*.h)
	mkdir obj 2>NUL && $(CC) -c $(CFLAGS) $< -o $@

%.dll: mingw64/bin/%.dll
	copy "$(subst /,\,$^)" .

jou.exe: $(OBJ) libgcc_s_seh-1.dll libgmp-10.dll libLLVMAggressiveInstCombine.dll libLLVMAnalysis.dll libLLVMAsmParser.dll libLLVMAsmPrinter.dll libLLVMBinaryFormat.dll libLLVMBitReader.dll libLLVMBitstreamReader.dll libLLVMBitWriter.dll libLLVMCFGuard.dll libLLVMCodeGen.dll libLLVMCore.dll libLLVMDebugInfoCodeView.dll libLLVMDebugInfoDWARF.dll libLLVMDemangle.dll libLLVMFrontendOpenMP.dll libLLVMGlobalISel.dll libLLVMInstCombine.dll libLLVMInstrumentation.dll libLLVMipo.dll libLLVMIRReader.dll libLLVMLinker.dll libLLVMMCDisassembler.dll libLLVMMC.dll libLLVMMCParser.dll libLLVMObject.dll libLLVMProfileData.dll libLLVMRemarks.dll libLLVMScalarOpts.dll libLLVMSelectionDAG.dll libLLVMSupport.dll libLLVMTarget.dll libLLVMTextAPI.dll libLLVMTransformUtils.dll libLLVMVectorize.dll libLLVMX86AsmParser.dll libLLVMX86CodeGen.dll libLLVMX86Desc.dll libLLVMX86Info.dll libLLVMX86TargetMCA.dll libLTO.dll libstdc++-6.dll libwinpthread-1.dll libz3.dll zlib1.dll
	$(CC) $(CFLAGS) $(OBJ) -o $@ $(LDFLAGS)

.PHONY: clean
clean:
	rmdir /s /q obj tmp 2>NUL
	del /q jou.exe *.dll compile_flags.txt 2>NUL
# TODO: ideally we would also delete jou_compiled directories, but not sure how:
#	find -name jou_compiled -print -exec rm -rf '{}' +
