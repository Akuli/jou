# assume llvm_headers.zip has been extracted
CFLAGS += -I.

# .a files generated in windows_setup.sh
LDFLAGS += $(wildcard libs/lib*.a)

ifeq ($(CC),cc)
	# default c compiler --> use clang
	CC := mingw64/bin/clang.exe
endif

# clang version in mingw doesn't seem as mature as what I have on linux...
# it shows a lot of unnecssary/dumb warnings by default
CFLAGS += -Wno-return-type -Wno-uninitialized -Wno-implicit-fallthrough

all: jou.exe compile_flags.txt

# point clangd to the right include folder so i don't get red squiggles in my editor
compile_flags.txt:
	echo "-I$(CURDIR)" > compile_flags.txt

obj/%.o: src/%.c $(wildcard src/*.h)
	mkdir -p obj && $(CC) -c $(CFLAGS) $< -o $@

jou.exe: $(OBJ)
	$(CC) $(CFLAGS) $(OBJ) -o $@ $(LDFLAGS)

config.jou:
	echo "# auto-generated by Makefile" > config.jou
	echo "def get_jou_clang_path() -> byte*:" >> config.jou
	echo "    return NULL" >> config.jou

self_hosted_compiler.exe: jou.exe config.jou $(wildcard self_hosted/*.jou)
	./jou.exe -O0 -o $@ --linker-flags "$(LDFLAGS)" self_hosted/main.jou

.PHONY: clean
clean:
	rm -rvf obj jou.exe self_hosted_compiler.exe tmp config.jou compile_flags.txt
	find -name jou_compiled -print -exec rm -rf '{}' +
