on:
  push:
    branches:
      - main
  pull_request:

jobs:
  shellcheck:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: shellcheck --color=always --shell=bash --exclude=SC2086,SC2059,SC2046,SC2235,SC2002,SC2206,SC2068,SC2207,SC2013 *.sh activate

  codespell:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt update
      - run: sudo apt install codespell
      - run: codespell --enable-colors -L ot,bu,hel,fom,olt $(git ls-files)

  # For consistency, Jou code in markdown files should use ```python, not ```python3
  python-in-markdown:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          if git grep -E '```(python3|py$|py3)' '*.md'; then
            echo 'Error: Jou code in markdown files must be marked with ```python'
            exit 1
          fi

  editorconfig-checker:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: wget https://github.com/editorconfig-checker/editorconfig-checker/releases/download/v3.2.0/ec-linux-amd64.tar.gz
      - name: Verify checksum
        run: |
          if [ "$(sha256sum ec-linux-amd64.tar.gz  | cut -d' ' -f1)" != "5e6a63097904be33c8d18e960f54fd8f60ada5464fe0056cd3dbbd0678584d15" ]; then
            echo "Checksum doesn't match! Maybe someone added malware to the release?"
            exit 1
          fi
      - run: tar xf ec-linux-amd64.tar.gz bin/ec-linux-amd64
      - run: bin/ec-linux-amd64

  markdownlink-checker:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Cache state file of link checker
        uses: actions/cache@v3
        with:
          path: links.json
          key: links-${{ hashFiles('check-markdown-links.py') }}
      - run: pip install requests==2.32.3
      - run: python check-markdown-links.py

  # Run the release script to make sure it doesn't error.
  release-dry-run:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch the whole Git history, used for release description
      - run: ./release.sh --github-token "${{ secrets.GITHUB_TOKEN }}" --dry-run
