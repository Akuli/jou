on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        llvm-version: [14, 15, 16]
        # Testing all levels because there was a bug that only happened with -O1. (#224)
        opt-level: ['-O0', '-O1', '-O2', '-O3']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch the whole Git history for bootstrapping
      - uses: actions/cache@v4
        with:
          path: jou_bootstrap
          key: bootstrap-${{ runner.os }}-${{ matrix.llvm-version }}-${{ matrix.opt-level }}-${{ hashFiles('bootstrap.sh') }}
      - name: "Mark cached bootstrap compiler as modified so that it is not rebuilt"
        run: touch -c jou_bootstrap
      - run: sudo apt update
      - run: sudo apt install -y llvm-${{ matrix.llvm-version }}-dev clang-${{ matrix.llvm-version }} make valgrind
      - name: "Select LLVM version"
        run: echo "LLVM_CONFIG=llvm-config-${{ matrix.llvm-version }}" >> $GITHUB_ENV
      - name: "Compile and test"
        run: ./runtests.sh --verbose --jou-flags "${{ matrix.opt-level }}"
      - name: "Compile the compiler with itself"
        run: mv jou jou_bootstrap && make
      - name: "Compile and test again"
        run: ./runtests.sh --verbose --jou-flags "${{ matrix.opt-level }}"
      # Valgrinding all files is slow, but let's valgrind the hello world.
      # This is enough to catch many bugs.
      #
      # We also have a separate, "full" valgrind run. See valgrind.yml.
      - name: "Run hello world with valgrind"
        run: ./runtests.sh --verbose --jou-flags "${{ matrix.opt-level }}" --valgrind hello
      - run: ./doctest.sh
