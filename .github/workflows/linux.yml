on:
  push:
    branches:
      - main
  pull_request:

jobs:
  fix-line-endings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y dos2unix
      - run: dos2unix $(git ls-files | grep -vx tests/should_succeed/crlf.jou)
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Change files to use LF line endings"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        llvm-version: [11, 13]
        # Testing all levels because there was a bug that only happened with -O1. (#224)
        opt-level: ['-O0', '-O1', '-O2', '-O3']
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y llvm-${{ matrix.llvm-version }}-dev clang-${{ matrix.llvm-version }} make valgrind
      - run: LLVM_CONFIG=llvm-config-${{ matrix.llvm-version }} make
      - run: ./runtests.sh --verbose './jou ${{ matrix.opt-level }} %s'
      - run: ./runtests.sh --verbose './jou ${{ matrix.opt-level }} --verbose %s'
      # Valgrinding is slow. Do it only when this file or something in the compiler has been modified.
      - name: Figure out if we need to run tests with valgrind
        id: check-need-valgrind
        run: |
          git fetch https://github.com/Akuli/jou main
          if git diff --name-only FETCH_HEAD HEAD | grep -E '(linux\.yml|\.c|\.h)$'; then
            echo doit=yes >> $GITHUB_OUTPUT
          else
            echo doit=no >> $GITHUB_OUTPUT
          fi
      - if: ${{ steps.check-need-valgrind.outputs.doit == 'yes' }}
        run: ./runtests.sh --verbose --valgrind './jou ${{ matrix.opt-level }} %s'
      # valgrind+verbose isn't meaningful: test script would ignore valgrind output
      - run: make clean
      - name: Check that "make clean" deleted all files not committed to Git
        run: |
          if [ "$(git status --porcelain --ignored)" != "" ]; then
            git status --ignored
            exit 1
          fi

  tokenizers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y llvm-13-dev clang-13 make valgrind
      - run: LLVM_CONFIG=llvm-config-13 make
      - run: ./tokenizers.sh
