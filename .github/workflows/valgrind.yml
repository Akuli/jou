# Runs tests with valgrind. That catches various memory bugs, but is too slow
# for running in every pull request.

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:  # Can also be triggered manually from github UI

jobs:
  # Please keep in sync with macos.yml
  check-if-needed:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    outputs:
      needed: ${{ steps.check.outputs.run }}
    steps:
      - uses: actions/checkout@v4
      - id: check
        run: |
          if [ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]; then
            echo "Triggered manually"
            echo "run=true" >> $GITHUB_OUTPUT
          elif [ "$GITHUB_REPOSITORY" != "Akuli/jou" ]; then
            echo "This is a fork of Jou, skipping"
            echo "run=false" >> $GITHUB_OUTPUT
          elif git --no-pager log --oneline --since="24 hours ago" --exit-code; then
            echo "No recent commits, skipping"
            echo "run=false" >> $GITHUB_OUTPUT
          else
            echo "run=true" >> $GITHUB_OUTPUT
          fi

  valgrind:
    needs: [check-if-needed]
    if: ${{ needs.check-if-needed.outputs.needed == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        # Testing all levels because there was a bug that only happened with -O1. (#224)
        # Please keep in sync with linux.yml
        params:
          - { llvm-version: 14, opt-level: '-O0' }
          - { llvm-version: 14, opt-level: '-O1' }
          - { llvm-version: 14, opt-level: '-O2' }
          - { llvm-version: 14, opt-level: '-O3' }
          - { llvm-version: 15, opt-level: '-O1' }
          - { llvm-version: 16, opt-level: '-O1' }
          - { llvm-version: 17, opt-level: '-O1' }
          - { llvm-version: 18, opt-level: '-O1' }
          - { llvm-version: 19, opt-level: '-O0' }
          - { llvm-version: 19, opt-level: '-O1' }
          - { llvm-version: 19, opt-level: '-O2' }
          - { llvm-version: 19, opt-level: '-O3' }
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch the whole Git history for bootstrapping
      - uses: actions/cache@v4
        with:
          path: jou_bootstrap
          key: bootstrap-valgrind-${{ runner.os }}-${{ matrix.params.llvm-version }}-${{ matrix.params.opt-level }}-${{ hashFiles('bootstrap.sh') }}
      - name: "Mark cached bootstrap compiler as modified so that it is not rebuilt"
        run: touch -c jou_bootstrap
      - run: sudo apt update
      - run: sudo apt install -y llvm-${{ matrix.params.llvm-version }}-dev clang-${{ matrix.params.llvm-version }} make valgrind
      - run: LLVM_CONFIG=llvm-config-${{ matrix.params.llvm-version }} make
      - name: "Test compiler with valgrind"
        run: ./runtests.sh --verbose --valgrind --jou-flags "${{ matrix.params.opt-level }}"

  # Please keep in sync with macos.yml
  create-issue-on-failure:
    name: Create an issue if failed
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [check-if-needed, valgrind]
    if: ${{ github.repository == 'Akuli/jou' && always() && needs.check-if-needed.outputs.needed == 'true' && needs.valgrind.result == 'failure' }}
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v4
      - run: ./create_issue.sh "${{ secrets.GITHUB_TOKEN }}" "Running tests with valgrind failed"
