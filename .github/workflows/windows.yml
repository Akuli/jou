#
#
#
# *** If you edit this file, make sure that CONTRIBUTING.md stays up to date.
#
#
#
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-zip:
    # Even though jou.exe runs on windows, it is compiled on linux.
    # This is by far the easiest way to compile for Windows that I know of.
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - run: source activate && ./windows_setup.sh
        shell: bash
      - run: source activate && mingw32-make
        shell: bash
      # We don't need to copy all of mingw64. We only need the linker.
      # The less we copy, the smaller the resulting zip becomes.
      - name: Copy some parts of mingw64 to jou/mingw64
        shell: bash
        run: |
          # .a files compress well, so copy them all.
          # CRT (C RunTime) files are needed because the linker implicitly adds them to every executable.
          for file in $(find mingw64 -name '*.a') $(find mingw64 -name 'crt*.o') mingw64/version_info.txt; do
            mkdir -vp jou/$(dirname $file)
            cp -v $file jou/$file
          done

          # executables without their DLLs (added later)
          #
          # clang is needed only to run the linker. It would be possible to invoke ld.exe
          # directly, but the command-line it wants is a bit complicated and it's just
          # easier to let clang figure it out.
          mkdir -v jou/mingw64/bin
          cp -v mingw64/bin/clang.exe mingw64/bin/ld.exe jou/mingw64/bin/
      - name: Copy more files to jou/
        # Please keep this list of files in sync with update.ps1
        run: cp -rv stdlib doc examples LICENSE jou.exe update.ps1 jou
        shell: bash
      - name: Copy missing DLL files to jou/
        shell: bash
        run: |
          for bindir in jou jou/mingw64/bin; do
            ready=no
            while [ $ready == no ]; do
              ready=yes
              for file in $(objdump -p $bindir/*.exe $bindir/*.dll | grep 'DLL Name:' | cut -d: -f2 | grep -vEiw 'kernel32.dll|msvcrt.dll|advapi32.dll|ole32.dll|shell32.dll|user32.dll'); do
                if [ -f mingw64/bin/$file ] && ! [ -f $bindir/$file ]; then
                  cp -v mingw64/bin/$file $bindir/
                  ready=no
                fi
              done
            done
          done
      - name: Convert text files to Windows-style CRLF line endings
        run: mingw64/bin/unix2dos $(find jou -name '*.jou') $(find jou -name '*.md') jou/LICENSE
        shell: bash
      - run: Compress-Archive -Path jou -DestinationPath jou.zip
      - uses: actions/upload-artifact@v3
        with:
          name: windows-zip
          path: jou.zip

  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Add a space in the folder name to trigger bugs like #165
          path: "test dir"
      - run: cd "test dir" && ./windows_setup.sh
        shell: bash
      - run: cd "test dir" && source activate && ./runtests.sh --verbose
        shell: bash

  test-zip:
    needs: build-zip
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: repo
      - uses: actions/download-artifact@v3
        with:
          name: windows-zip
      - run: unzip jou.zip
      - run: cp -r repo/tests repo/runtests.sh jou
        shell: bash
      - run: cd jou && ./jou.exe --verbose examples/hello.jou
        shell: bash
      - run: cd jou && ./runtests.sh --dont-run-make --verbose
        shell: bash

  compare-compilers:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - run: source activate && ./windows_setup.sh
        shell: bash
      - run: source activate && ./compare_compilers.sh
        shell: bash
