import "stdlib/io.jou"

class Foo[T]:
    x: T

    # This wouldn't work without @inline because size of stack
    # variable new_x and return value would be unknown.
    @inline
    def set_x(self, new_x: T) -> None:
        self->x = new_x
    @inline
    def get_x(self) -> T:
        return self->x

@inline
def increment(x: int) -> int:
    x += 1
    return x

def main() -> int:
    x = 1
    y = increment(x)
    z = increment(y)
    printf("%d %d %d\n", x, y, z)  # Output: 1 2 3

    f = Foo[int]{}
    f.set_x(1234)
    printf("%d\n", f.get_x())  # Output: 1234

    return 0
