declare putchar(ch: int) -> int
declare printf(format: byte*, ...) -> int

def side_effect(letter: byte, value: bool) -> bool:
    putchar(letter)
    return value

def main() -> int:
    # Output: 1000
    printf("%d", 1+2==3 and 1+2==3)
    printf("%d", 1+2==3 and 1+2==4)
    printf("%d", 1+2==4 and 1+2==3)
    printf("%d", 1+2==4 and 1+2==4)
    putchar('\n')

    # Output: 1110
    printf("%d", 1+2==3 or 1+2==3)
    printf("%d", 1+2==3 or 1+2==4)
    printf("%d", 1+2==4 or 1+2==3)
    printf("%d", 1+2==4 or 1+2==4)
    putchar('\n')

    # Output: 01
    printf("%d", not 1+2==3)
    printf("%d", not 1+2==4)
    putchar('\n')

    # Anything with "False and ..." contains code that never runs: the "..." part
    # is not evaluated at all because the result will be False anyway.
    #
    # Technically "True and ..." also contains code that never runs: the left side
    # of "and" is never False, but the compiler still generates code to handle that
    # case (the generated code sets the result of the "and" operation to False).
    # Showing a warning about the generated code would probably be more
    # confusing than helpful, so the compiler hides it.
    #
    # Similar things apply to "or".

    # Output: Triple and 10000000
    printf("Triple and ")
    printf("%d", True and True and True)
    printf("%d", True and True and False)
    printf("%d", True and False and True)  # Warning: this code will never run
    printf("%d", True and False and False)  # Warning: this code will never run
    printf("%d", False and True and True)  # Warning: this code will never run
    printf("%d", False and True and False)  # Warning: this code will never run
    printf("%d", False and False and True)  # Warning: this code will never run
    printf("%d", False and False and False)  # Warning: this code will never run
    putchar('\n')

    # Output: Triple or 11111110
    printf("Triple or ")
    printf("%d", True or True or True)  # Warning: this code will never run
    printf("%d", True or True or False)  # Warning: this code will never run
    printf("%d", True or False or True)  # Warning: this code will never run
    printf("%d", True or False or False)  # Warning: this code will never run
    printf("%d", False or True or True)  # Warning: this code will never run
    printf("%d", False or True or False)  # Warning: this code will never run
    printf("%d", False or False or True)
    printf("%d", False or False or False)
    putchar('\n')

    # TODO: presumably these should emit warnings too

    # Output: Precedence and 0001
    printf("Precedence and ")
    printf("%d", not True and not True)
    printf("%d", not True and not False)
    printf("%d", not False and not True)
    printf("%d", not False and not False)
    putchar('\n')

    # Output: Precedence or 0111
    printf("Precedence or ")
    printf("%d", not True or not True)
    printf("%d", not True or not False)
    printf("%d", not False or not True)
    printf("%d", not False or not False)
    putchar('\n')

    # Output: Side effects and aAbBcd
    printf("Side effects and ")
    result = side_effect('a', True) and side_effect('A', True)
    result = side_effect('b', True) and side_effect('B', False)
    result = side_effect('c', False) and side_effect('C', True)
    result = side_effect('d', False) and side_effect('D', False)
    putchar('\n')

    # Output: Side effects or abcCdD
    printf("Side effects or ")
    result = side_effect('a', True) or side_effect('A', True)
    result = side_effect('b', True) or side_effect('B', False)
    result = side_effect('c', False) or side_effect('C', True)
    result = side_effect('d', False) or side_effect('D', False)
    putchar('\n')

    # Output: Side effects not ab
    printf("Side effects not ")
    result = not side_effect('a', True)
    result = not side_effect('b', False)
    putchar('\n')

    return 0
