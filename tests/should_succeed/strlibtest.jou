import "stdlib/io.jou"
import "stdlib/mem.jou"
import "stdlib/str.jou"

def main() -> int:
    printf("%d\n", starts_with("hello", ""))  # Output: 1
    printf("%d\n", starts_with("hello", "hel"))  # Output: 1
    printf("%d\n", starts_with("hello", "hello"))  # Output: 1
    printf("%d\n", starts_with("hello", "hellooooooo"))  # Output: 0
    printf("%d\n", starts_with("hello", "ello"))  # Output: 0
    printf("%d\n", starts_with("hello", "H"))  # Output: 0
    printf("%d\n", starts_with("hello", "O"))  # Output: 0

    printf("%d\n", ends_with("hello", ""))  # Output: 1
    printf("%d\n", ends_with("hello", "llo"))  # Output: 1
    printf("%d\n", ends_with("hello", "hello"))  # Output: 1
    printf("%d\n", ends_with("hello", "hhhhhhello"))  # Output: 0
    printf("%d\n", ends_with("hello", "hell"))  # Output: 0
    printf("%d\n", ends_with("hello", "H"))  # Output: 0
    printf("%d\n", ends_with("hello", "O"))  # Output: 0

    message: byte[100]
    sprintf(message, "You selected option %d.", 1 + 2)
    puts(message)  # Output: You selected option 3.

    greeting: byte[10]
    snprintf(greeting, sizeof(greeting), "Hello %s", "World")
    puts(greeting)  # Output: Hello Wor

    # Output: Title: Foobar
    # Output: Bla bla bla. Bla bla. Bla.
    full_text: byte*
    asprintf(&full_text, "Title: %s\n%s", "Foobar", "Bla bla bla. Bla bla. Bla.")
    puts(full_text)
    free(full_text)

    return 0
