import "stdlib/io.jou"
import "stdlib/mem.jou"

class Node:
    value: byte
    next: Node*

    def print(self) -> None:
        putchar(self->value)
        if self->next != NULL:
            self->next->print()
        else:
            putchar('\n')

def prepend(list: Node**, value: byte) -> None:
    new_first: Node* = malloc(sizeof *new_first)
    *new_first = Node{value = value, next = *list}
    *list = new_first

def free_list(list: Node*) -> None:
    while list != NULL:
        next = list->next
        free(list)
        list = next

def main() -> int:
    list: Node* = NULL
    prepend(&list, 'o')
    prepend(&list, 'l')
    prepend(&list, 'l')
    prepend(&list, 'e')
    prepend(&list, 'h')
    list->print()  # Output: hello

    free_list(list)
    return 0
