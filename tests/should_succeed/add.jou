cdecl printf(format: byte*, ...) -> int

def side_effect(ch: int) -> int:
    printf("%d ", ch)
    return ch

def main() -> int:
    printf("%d\n", 7+15)    # Output: 22

    printf("%d\n", 1+2*3)       # Output: 7
    printf("%d\n", 1+(2*3))     # Output: 7
    printf("%d\n", (1+2)*3)     # Output: 9

    # '2' converts to int 50
    printf("%d\n", 1000 + '2')  # Output: 1050

    # (3 * ASCII 'a') % 256 = (3*97) % 256 = 35
    # TODO: this seems dumb, should they convert to int instead?
    printf("%d\n", 'a')         # Output: 97
    printf("%d\n", 'a'+'a')     # Output: 194
    printf("%d\n", 'a'+'a'+'a') # Output: 35

    # Output: 1 2 3 4 10
    printf("%d\n", side_effect(1) + side_effect(2) + side_effect(3) + side_effect(4))
    return 0
