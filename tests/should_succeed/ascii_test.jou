import "stdlib/ascii.jou"
import "stdlib/io.jou"
import "stdlib/mem.jou"
import "stdlib/str.jou"

def main() -> int:
    assert is_ascii("hello")
    assert is_ascii("hello world test!!! @$!")
    assert is_ascii("")
    assert not is_ascii("örkkimörkki")

    assert is_ascii_digit('0')
    assert is_ascii_digit('7')
    assert is_ascii_digit('9')
    assert not is_ascii_digit('x')
    assert not is_ascii_digit('\0')

    assert is_ascii_letter('A')
    assert is_ascii_letter('Z')
    assert is_ascii_letter('a')
    assert is_ascii_letter('z')
    assert not is_ascii_letter('\0')
    assert not is_ascii_letter('\\')
    assert not is_ascii_letter('\n')

    assert is_ascii_punctuation('!')
    assert is_ascii_punctuation('_')
    assert not is_ascii_punctuation('a')
    assert not is_ascii_punctuation('2')
    assert not is_ascii_punctuation('\0')

    assert is_ascii_whitespace(' ')
    assert is_ascii_whitespace('\t')
    assert is_ascii_whitespace('\r')
    assert is_ascii_whitespace('\n')
    assert not is_ascii_whitespace('a')
    assert not is_ascii_whitespace('.')
    assert not is_ascii_whitespace('\0')

    s: byte[100] = "  hello world \r\n  \t "
    trim_ascii_whitespace(s)
    assert strcmp(s, "hello world") == 0

    s = "  hello world \r\n  \t "
    words = split_by_ascii_whitespace(s)
    # Output: hello
    # Output: world
    for w = words; *w != NULL; w++:
        puts(*w)
    # Output: hello
    # Output: world
    for i = 0; words[i] != NULL; i++:
        puts(words[i])
    free(words)

    s = ""
    words = split_by_ascii_whitespace(s)
    assert words[0] == NULL
    free(words)

    s = "test1 test2"
    words = split_by_ascii_whitespace(s)
    puts(words[0])  # Output: test1
    puts(words[1])  # Output: test2
    assert words[2] == NULL
    free(words)

    return 0
