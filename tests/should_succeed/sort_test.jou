import "stdlib/io.jou"
import "stdlib/str.jou"
import "stdlib/sort.jou"


class Language:
    name: byte*
    year: int

    def print(self) -> None:
        printf("%s (%d)\n", self.name, self.year)


def compare_language_name(a: Language*, b: Language*) -> int:
    return strcmp(a.name, b.name)

def compare_language_year(a: Language*, b: Language*) -> int:
    return a.year - b.year


def main() -> int:
    # Output: dehllloorw
    message: byte[50] = "helloworld"
    sort_uint8(message, strlen(message))
    puts(message)

    # Output: bar
    # Output: baz
    # Output: foo
    strings = ["foo", "bar", "baz"]
    sort_strings(strings, 3)
    for i = 0; i < 3; i++:
        puts(strings[i])

    # TODO: It is annoying that negative numbers need casting here.
    i8: int8[5] = [-1 as int8, 0, -2 as int8, 2, 1]
    i16: int16[5] = [-1 as int16, 0, -2 as int16, 2, 1]
    i32: int32[5] = [-1, 0, -2, 2, 1]
    i64: int64[5] = [-1, 0, -2, 2, 1]
    u8: uint8[5] = [4, 0, 2, 1, 3]
    u16: uint16[5] = [4, 0, 2, 1, 3]
    u32: uint32[5] = [4, 0, 2, 1, 3]
    u64: uint64[5] = [4, 0, 2, 1, 3]

    # Output: -2 -1 0 1 2
    # Output: -2 -1 0 1 2
    # Output: -2 -1 0 1 2
    # Output: -2 -1 0 1 2
    sort_int8(i8, 5)
    sort_int16(i16, 5)
    sort_int32(i32, 5)
    sort_int64(i64, 5)
    printf("%d %d %d %d %d\n", i8[0], i8[1], i8[2], i8[3], i8[4])
    printf("%d %d %d %d %d\n", i16[0], i16[1], i16[2], i16[3], i16[4])
    printf("%d %d %d %d %d\n", i32[0], i32[1], i32[2], i32[3], i32[4])
    printf("%lld %lld %lld %lld %lld\n", i64[0], i64[1], i64[2], i64[3], i64[4])

    # Output: 0 1 2 3 4
    # Output: 0 1 2 3 4
    # Output: 0 1 2 3 4
    # Output: 0 1 2 3 4
    sort_uint8(u8, 5)
    sort_uint16(u16, 5)
    sort_uint32(u32, 5)
    sort_uint64(u64, 5)
    printf("%d %d %d %d %d\n", u8[0], u8[1], u8[2], u8[3], u8[4])
    printf("%d %d %d %d %d\n", u16[0], u16[1], u16[2], u16[3], u16[4])
    printf("%u %u %u %u %u\n", u32[0], u32[1], u32[2], u32[3], u32[4])
    printf("%llu %llu %llu %llu %llu\n", u64[0], u64[1], u64[2], u64[3], u64[4])

    # Sorting custom data structure
    languages = [
        Language{name="C", year=1972},
        Language{name="Python", year=1991},
        Language{name="Jou", year=2022},
    ]

    # Output: C (1972)
    # Output: Jou (2022)
    # Output: Python (1991)
    Sorter[Language]{}.sort(languages, 3, compare_language_name)
    for i = 0; i < 3; i++:
        languages[i].print()

    # Output: C (1972)
    # Output: Python (1991)
    # Output: Jou (2022)
    Sorter[Language]{}.sort(languages, 3, compare_language_year)
    for i = 0; i < 3; i++:
        languages[i].print()

    return 0
