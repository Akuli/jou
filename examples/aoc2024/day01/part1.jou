import "stdlib/io.jou"
import "stdlib/math.jou"


def swap(a: int*, b: int*) -> None:
    temp = *a
    *a = *b
    *b = temp


def sort(array: int*, length: int) -> None:
    # inefficient and dumb sorting algorithm
    while length > 0:
        smallest = 0
        for i = 1; i < length; i++:
            if array[i] < array[smallest]:
                smallest = i
        swap(&array[0], &array[smallest])
        array++
        length--


def main() -> int:
    f = fopen("sampleinput.txt", "r")
    assert f != NULL

    left_column: int[2000]
    right_column: int[2000]
    n = 0
    while fscanf(f, "%d %d", &left_column[n], &right_column[n]) == 2:
        n++
        assert n < 2000

    fclose(f)

    sort(left_column, n)
    sort(right_column, n)

    result: long = 0
    for i = 0; i < n; i++:
        result += abs(left_column[i] - right_column[i])
    printf("%lld\n", result)  # Output: 11

    return 0
