import "stdlib/io.jou"
import "stdlib/str.jou"
import "stdlib/mem.jou"
import "stdlib/list.jou"
import "stdlib/ascii.jou"


def sort(list: List[int]) -> None:
    # bubble sort go brrrr
    while True:
        is_sorted = True
        for i = 1; i < list.len; i++:
            if list.ptr[i-1] > list.ptr[i]:
                memswap(&list.ptr[i-1], &list.ptr[i], sizeof(list.ptr[i]))
                is_sorted = False
        if is_sorted:
            return


def main() -> int:
    f = fopen("sampleinput.txt", "r")
    assert f != NULL

    line: byte[100]
    elf = 0
    elfs = List[int]{}

    while fgets(line, sizeof(line) as int, f) != NULL:
        trim_ascii_whitespace(line)
        if line[0] == '\0':
            elfs.append(elf)
            elf = 0
        else:
            elf += atoi(line)
    fclose(f)
    elfs.append(elf)  # file does not end with a blank line, so last elf is special

    sort(elfs)

    assert elfs.len >= 3
    # Output: 45000
    printf("%d\n", elfs.end()[-1] + elfs.end()[-2] + elfs.end()[-3])

    free(elfs.ptr)
    return 0
